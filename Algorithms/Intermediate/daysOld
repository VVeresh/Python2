# By Websten from forums
#
# Given your birthday and the current date, calculate your age in days. 
# Account for leap days. 
#
# Assume that the birthday and current date are correct dates (and no 
# time travel). 
#

def isLeapYear(year):
    if year%4 != 0:
        return False
    elif year%100 != 0:
        return True
    elif year%400 != 0:
        return False
    else:
        return True

def passDays(y,m,d):
    days = 0
    daysOfMonths = [ 31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31]
    
    if isLeapYear(y):
        daysOfMonths[1] = 29
    if m > 1:    
        for month in range(0,m-1):
            days += daysOfMonths[month]
            
    return days + d
    

def daysBetweenDates(y1,m1,d1,y2,m2,d2):
    yearsDays = 0
    firstYearDays = 0

    if isLeapYear(y1):
        firstYearDays = 366 - passDays(y1,m1,d1)
    else:
        firstYearDays = 365 - passDays(y1,m1,d1)
    
    if y2 - y1 > 1:
        for y in range(y1+1,y2):
            if isLeapYear(y):
                yearsDays += 366
            else:
                yearsDays += 365
        return yearsDays + firstYearDays + passDays(y2,m2,d2)
    elif y1 == y2:
        return passDays(y2,m2,d2) - passDays(y1,m1,d1)
    else:
        if isLeapYear(y1):
            return 366 - passDays(y1,m1,d1) + passDays(y2,m2,d2)
        else:
            return 365 - passDays(y1,m1,d1) + passDays(y2,m2,d2)
       
#print daysBetweenDates(2011,1,1,2012,8,8)
# Test routine

def test():
    test_cases = [((2012,1,1,2012,2,28), 58), 
                  ((2012,1,1,2012,3,1), 60),
                  ((2011,6,30,2012,6,30), 366),
                  ((2011,1,1,2012,8,8), 585 ),
                  ((1900,1,1,1999,12,31), 36523)]
    for (args, answer) in test_cases:
        result = daysBetweenDates(*args)
        if result != answer:
            print "Test with data:", args, "failed"
        else:
            print "Test case passed!"

test()
